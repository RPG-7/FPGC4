10010000000000000000101101000010 //Jump to constant address 1441
10010000000000000000101110101010 //Jump to constant address 1493
10010000000000000000101110101100 //Jump to constant address 1494
10010000000000000000101110101110 //Jump to constant address 1495
10010000000000000000101110110000 //Jump to constant address 1496
00000000000000000000011010111101 //Length of program
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000011100 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000011101 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000101000 //data
00000000000000000000000000101000 //data
00000000000000000000000000101000 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001000 //data
00000000000000000000000000010001 //data
00000000000000000000000000011101 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000011001 //data
00000000000000000000000000011010 //data
00000000000000000000000000011011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000100000 //data
00000000000000000000000000100000 //data
00000000000000000000000000100000 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000100100 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000001101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000011100 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010010 //data
00000000000000000000000000010011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001000 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000001 //data
00000000000000000000000000000011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000001 //data
00000000000000000000000000000010 //data
00000000000000000000000000000011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000001 //data
00000000000000000000000000000010 //data
00000000000000000000000000100101 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000001 //data
00000000000000000000000000100101 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000100100 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000100101 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000000101 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001011 //data
00000000000000000000000000100000 //data
00000000000000000000000000100000 //data
00000000000000000000000000100000 //data
00000000000000000000000000001001 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000100100 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000100101 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000100100 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000000010 //data
00000000000000000000000000100101 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
00000000000000000000000000001010 //data
10110000000000000000000001010000 //Push r5 to stack
10110000000000000000000001100000 //Push r6 to stack
10110000000000000000000001110000 //Push r7 to stack
10110000000000000000000010000000 //Push r8 to stack
10110000000000000000000010010000 //Push r9 to stack
10110000000000000000000010100000 //Push r10 to stack
01110001010000100000000000001010 //Set r10 to 0x1420
01110000000011000000000100001010 //Set highest 16 bits of r10 to 0xC0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000101000000110 //Compute r10 OR r0 and write result to r6
00000000000000000000000100000111 //Compute r1 OR r0 and write result to r7
01110000000000100000000000001000 //Set r8 to 32
00000001100000000000001101100110 //Compute r3 + r6 and write result to r6
00001010000000001000100000001000 //Compute r8 - 8 and write result to r8
11100000000000000000011100001001 //Read at address in r7 with offset 0 to r9
00000011000000000000100110001001 //Compute r9 >> r8 and write result to r9
11010000000000000000011010010000 //Write value in r9 to address in r6 with offset 0
11010000100000000000011001000000 //Write value in r4 to address in r6 with offset 2048
00001001100000000001011000000110 //Compute r6 + 1 and write result to r6
01010000000000000011000010000000 //If r0 != r8, then jump to offset 3
00001001100000000001011100000111 //Compute r7 + 1 and write result to r7
01110000000000100000000000001000 //Set r8 to 32
00001001100000000001010100000101 //Compute r5 + 1 and write result to r5
00110000000000000010010100100000 //If r5 >= r2, then jump to offset 2
10010000000000000000100001000110 //Jump to constant address 1059
10100000000000000000000000001010 //Pop from stack to r10
10100000000000000000000000001001 //Pop from stack to r9
10100000000000000000000000001000 //Pop from stack to r8
10100000000000000000000000000111 //Pop from stack to r7
10100000000000000000000000000110 //Pop from stack to r6
10100000000000000000000000000101 //Pop from stack to r5
10100000000000000000000000001111 //Pop from stack to r15
10000000000000000011000011110000 //Jump to reg r15 with offset 3
10110000000000000000000001000000 //Push r4 to stack
10110000000000000000000001010000 //Push r5 to stack
10110000000000000000000001100000 //Push r6 to stack
10110000000000000000000001110000 //Push r7 to stack
10110000000000000000000010000000 //Push r8 to stack
10110000000000000000000010010000 //Push r9 to stack
01110001010000100000000000000100 //Set r4 to 0x1420
01110000000011000000000100000100 //Set highest 16 bits of r4 to 0xC0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000010000000110 //Compute r4 OR r0 and write result to r6
00000000000000000000000100000111 //Compute r1 OR r0 and write result to r7
01110000000000100000000000001000 //Set r8 to 32
00000001100000000000001101100110 //Compute r3 + r6 and write result to r6
00001010000000001000100000001000 //Compute r8 - 8 and write result to r8
11100000000000000000011100001001 //Read at address in r7 with offset 0 to r9
00000011000000000000100110001001 //Compute r9 >> r8 and write result to r9
11010000000000000000011010010000 //Write value in r9 to address in r6 with offset 0
00001001100000000001011000000110 //Compute r6 + 1 and write result to r6
01010000000000000011000010000000 //If r0 != r8, then jump to offset 3
00001001100000000001011100000111 //Compute r7 + 1 and write result to r7
01110000000000100000000000001000 //Set r8 to 32
00001001100000000001010100000101 //Compute r5 + 1 and write result to r5
00110000000000000010010100100000 //If r5 >= r2, then jump to offset 2
10010000000000000000100010001000 //Jump to constant address 1092
10100000000000000000000000001001 //Pop from stack to r9
10100000000000000000000000001000 //Pop from stack to r8
10100000000000000000000000000111 //Pop from stack to r7
10100000000000000000000000000110 //Pop from stack to r6
10100000000000000000000000000101 //Pop from stack to r5
10100000000000000000000000000100 //Pop from stack to r4
10100000000000000000000000001111 //Pop from stack to r15
10000000000000000011000011110000 //Jump to reg r15 with offset 3
10110000000000000000000001010000 //Push r5 to stack
10110000000000000000000001100000 //Push r6 to stack
10110000000000000000000001110000 //Push r7 to stack
10110000000000000000000010000000 //Push r8 to stack
10110000000000000000000010010000 //Push r9 to stack
10110000000000000000000010100000 //Push r10 to stack
01110000010000100000000000001010 //Set r10 to 0x0420
01110000000011000000000100001010 //Set highest 16 bits of r10 to 0xC0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000101000000110 //Compute r10 OR r0 and write result to r6
00000000000000000000000100000111 //Compute r1 OR r0 and write result to r7
01110000000000100000000000001000 //Set r8 to 32
00000001100000000000001101100110 //Compute r3 + r6 and write result to r6
00001010000000001000100000001000 //Compute r8 - 8 and write result to r8
11100000000000000000011100001001 //Read at address in r7 with offset 0 to r9
00000011000000000000100110001001 //Compute r9 >> r8 and write result to r9
11010000000000000000011010010000 //Write value in r9 to address in r6 with offset 0
11010000100000000000011001000000 //Write value in r4 to address in r6 with offset 2048
00001001100000000001011000000110 //Compute r6 + 1 and write result to r6
01010000000000000011000010000000 //If r0 != r8, then jump to offset 3
00001001100000000001011100000111 //Compute r7 + 1 and write result to r7
01110000000000100000000000001000 //Set r8 to 32
00001001100000000001010100000101 //Compute r5 + 1 and write result to r5
00110000000000000010010100100000 //If r5 >= r2, then jump to offset 2
10010000000000000000100011001000 //Jump to constant address 1124
10100000000000000000000000001010 //Pop from stack to r10
10100000000000000000000000001001 //Pop from stack to r9
10100000000000000000000000001000 //Pop from stack to r8
10100000000000000000000000000111 //Pop from stack to r7
10100000000000000000000000000110 //Pop from stack to r6
10100000000000000000000000000101 //Pop from stack to r5
10100000000000000000000000001111 //Pop from stack to r15
10000000000000000011000011110000 //Jump to reg r15 with offset 3
10110000000000000000000001000000 //Push r4 to stack
10110000000000000000000001010000 //Push r5 to stack
10110000000000000000000001100000 //Push r6 to stack
10110000000000000000000001110000 //Push r7 to stack
10110000000000000000000010000000 //Push r8 to stack
10110000000000000000000010010000 //Push r9 to stack
01110000010000100000000000000100 //Set r4 to 0x0420
01110000000011000000000100000100 //Set highest 16 bits of r4 to 0xC0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000010000000110 //Compute r4 OR r0 and write result to r6
00000000000000000000000100000111 //Compute r1 OR r0 and write result to r7
01110000000000100000000000001000 //Set r8 to 32
00000001100000000000001101100110 //Compute r3 + r6 and write result to r6
00001010000000001000100000001000 //Compute r8 - 8 and write result to r8
11100000000000000000011100001001 //Read at address in r7 with offset 0 to r9
00000011000000000000100110001001 //Compute r9 >> r8 and write result to r9
11010000000000000000011010010000 //Write value in r9 to address in r6 with offset 0
00001001100000000001011000000110 //Compute r6 + 1 and write result to r6
01010000000000000011000010000000 //If r0 != r8, then jump to offset 3
00001001100000000001011100000111 //Compute r7 + 1 and write result to r7
01110000000000100000000000001000 //Set r8 to 32
00001001100000000001010100000101 //Compute r5 + 1 and write result to r5
00110000000000000010010100100000 //If r5 >= r2, then jump to offset 2
10010000000000000000100100001010 //Jump to constant address 1157
10100000000000000000000000001001 //Pop from stack to r9
10100000000000000000000000001000 //Pop from stack to r8
10100000000000000000000000000111 //Pop from stack to r7
10100000000000000000000000000110 //Pop from stack to r6
10100000000000000000000000000101 //Pop from stack to r5
10100000000000000000000000000100 //Pop from stack to r4
10100000000000000000000000001111 //Pop from stack to r15
10000000000000000011000011110000 //Jump to reg r15 with offset 3
00100000000000000000000000001111 //Save PC to r15
10110000000000000000000011110000 //Push r15 to stack
10010000000000000000100110110010 //Jump to constant address 1241
00100000000000000000000000001111 //Save PC to r15
10110000000000000000000011110000 //Push r15 to stack
10010000000000000000100111011110 //Jump to constant address 1263
00100000000000000000000000001111 //Save PC to r15
10110000000000000000000011110000 //Push r15 to stack
10010000000000000000101000001010 //Jump to constant address 1285
00100000000000000000000000001111 //Save PC to r15
10110000000000000000000011110000 //Push r15 to stack
10010000000000000000101000110110 //Jump to constant address 1307
00100000000000000000000000001111 //Save PC to r15
10110000000000000000000011110000 //Push r15 to stack
10010000000000000000101001100010 //Jump to constant address 1329
10100000000000000000000000001111 //Pop from stack to r15
10000000000000000011000011110000 //Jump to reg r15 with offset 3
10110000000000000000000000100000 //Push r2 to stack
10110000000000000000000000110000 //Push r3 to stack
10110000000000000000000001000000 //Push r4 to stack
10110000000000000000000001010000 //Push r5 to stack
10110000000000000000000001100000 //Push r6 to stack
01110000000000000000000000000010 //Set r2 to 0x0000
01110000000011000000000100000010 //Set highest 16 bits of r2 to 0xC0
01110000000000000000000000000011 //Set r3 to 0
01110000010000000000000000000100 //Set r4 to 1024
00000000000000000000001000000101 //Compute r2 OR r0 and write result to r5
00000000000000000000000100000110 //Compute r1 OR r0 and write result to r6
11000000000000000000011001010000 //Copy from address in r6 to address in r5 with offset 0
00001001100000000001010100000101 //Compute r5 + 1 and write result to r5
00001001100000000001011000000110 //Compute r6 + 1 and write result to r6
00001001100000000001001100000011 //Compute r3 + 1 and write result to r3
01100000000000000010001101000000 //If r3 == r4, then jump to offset 2
10010000000000000000100101101000 //Jump to constant address 1204
10100000000000000000000000000110 //Pop from stack to r6
10100000000000000000000000000101 //Pop from stack to r5
10100000000000000000000000000100 //Pop from stack to r4
10100000000000000000000000000011 //Pop from stack to r3
10100000000000000000000000000010 //Pop from stack to r2
10100000000000000000000000001111 //Pop from stack to r15
10000000000000000011000011110000 //Jump to reg r15 with offset 3
10110000000000000000000000100000 //Push r2 to stack
10110000000000000000000000110000 //Push r3 to stack
10110000000000000000000001000000 //Push r4 to stack
10110000000000000000000001010000 //Push r5 to stack
10110000000000000000000001100000 //Push r6 to stack
01110000010000000000000000000010 //Set r2 to 0x0400
01110000000011000000000100000010 //Set highest 16 bits of r2 to 0xC0
01110000000000000000000000000011 //Set r3 to 0
01110000000000100000000000000100 //Set r4 to 32
00000000000000000000001000000101 //Compute r2 OR r0 and write result to r5
00000000000000000000000100000110 //Compute r1 OR r0 and write result to r6
11000000000000000000011001010000 //Copy from address in r6 to address in r5 with offset 0
00001001100000000001010100000101 //Compute r5 + 1 and write result to r5
00001001100000000001011000000110 //Compute r6 + 1 and write result to r6
00001001100000000001001100000011 //Compute r3 + 1 and write result to r3
01100000000000000010001101000000 //If r3 == r4, then jump to offset 2
10010000000000000000100110011000 //Jump to constant address 1228
10100000000000000000000000000110 //Pop from stack to r6
10100000000000000000000000000101 //Pop from stack to r5
10100000000000000000000000000100 //Pop from stack to r4
10100000000000000000000000000011 //Pop from stack to r3
10100000000000000000000000000010 //Pop from stack to r2
10100000000000000000000000001111 //Pop from stack to r15
10000000000000000011000011110000 //Jump to reg r15 with offset 3
10110000000000000000000000010000 //Push r1 to stack
10110000000000000000000000100000 //Push r2 to stack
10110000000000000000000000110000 //Push r3 to stack
10110000000000000000000001000000 //Push r4 to stack
10110000000000000000000001010000 //Push r5 to stack
01110000010000100000000000000001 //Set r1 to 0x0420
01110000000011000000000100000001 //Set highest 16 bits of r1 to 0xC0
01110000000000000000000000000011 //Set r3 to 0
01110000100000000000000000000100 //Set r4 to 2048
00000000000000000000000100000101 //Compute r1 OR r0 and write result to r5
11010000000000000000010100000000 //Write value in r0 to address in r5 with offset 0
00001001100000000001010100000101 //Compute r5 + 1 and write result to r5
00001001100000000001001100000011 //Compute r3 + 1 and write result to r3
01100000000000000010001101000000 //If r3 == r4, then jump to offset 2
10010000000000000000100111000110 //Jump to constant address 1251
10100000000000000000000000000101 //Pop from stack to r5
10100000000000000000000000000100 //Pop from stack to r4
10100000000000000000000000000011 //Pop from stack to r3
10100000000000000000000000000010 //Pop from stack to r2
10100000000000000000000000000001 //Pop from stack to r1
10100000000000000000000000001111 //Pop from stack to r15
10000000000000000011000011110000 //Jump to reg r15 with offset 3
10110000000000000000000000010000 //Push r1 to stack
10110000000000000000000000100000 //Push r2 to stack
10110000000000000000000000110000 //Push r3 to stack
10110000000000000000000001000000 //Push r4 to stack
10110000000000000000000001010000 //Push r5 to stack
01110000110000100000000000000001 //Set r1 to 0x0C20
01110000000011000000000100000001 //Set highest 16 bits of r1 to 0xC0
01110000000000000000000000000011 //Set r3 to 0
01110000100000000000000000000100 //Set r4 to 2048
00000000000000000000000100000101 //Compute r1 OR r0 and write result to r5
11010000000000000000010100000000 //Write value in r0 to address in r5 with offset 0
00001001100000000001010100000101 //Compute r5 + 1 and write result to r5
00001001100000000001001100000011 //Compute r3 + 1 and write result to r3
01100000000000000010001101000000 //If r3 == r4, then jump to offset 2
10010000000000000000100111110010 //Jump to constant address 1273
10100000000000000000000000000101 //Pop from stack to r5
10100000000000000000000000000100 //Pop from stack to r4
10100000000000000000000000000011 //Pop from stack to r3
10100000000000000000000000000010 //Pop from stack to r2
10100000000000000000000000000001 //Pop from stack to r1
10100000000000000000000000001111 //Pop from stack to r15
10000000000000000011000011110000 //Jump to reg r15 with offset 3
10110000000000000000000000010000 //Push r1 to stack
10110000000000000000000000100000 //Push r2 to stack
10110000000000000000000000110000 //Push r3 to stack
10110000000000000000000001000000 //Push r4 to stack
10110000000000000000000001010000 //Push r5 to stack
01110001010000100000000000000001 //Set r1 to 0x1420
01110000000011000000000100000001 //Set highest 16 bits of r1 to 0xC0
01110000000000000000000000000011 //Set r3 to 0
01110000011110000000000000000100 //Set r4 to 1920
00000000000000000000000100000101 //Compute r1 OR r0 and write result to r5
11010000000000000000010100000000 //Write value in r0 to address in r5 with offset 0
00001001100000000001010100000101 //Compute r5 + 1 and write result to r5
00001001100000000001001100000011 //Compute r3 + 1 and write result to r3
01100000000000000010001101000000 //If r3 == r4, then jump to offset 2
10010000000000000000101000011110 //Jump to constant address 1295
10100000000000000000000000000101 //Pop from stack to r5
10100000000000000000000000000100 //Pop from stack to r4
10100000000000000000000000000011 //Pop from stack to r3
10100000000000000000000000000010 //Pop from stack to r2
10100000000000000000000000000001 //Pop from stack to r1
10100000000000000000000000001111 //Pop from stack to r15
10000000000000000011000011110000 //Jump to reg r15 with offset 3
10110000000000000000000000010000 //Push r1 to stack
10110000000000000000000000100000 //Push r2 to stack
10110000000000000000000000110000 //Push r3 to stack
10110000000000000000000001000000 //Push r4 to stack
10110000000000000000000001010000 //Push r5 to stack
01110000110000100000000000000001 //Set r1 to 0x0C20
01110000000011000000000100000001 //Set highest 16 bits of r1 to 0xC0
01110000000000000000000000000011 //Set r3 to 0
01110000011110000000000000000100 //Set r4 to 1920
00000000000000000000000100000101 //Compute r1 OR r0 and write result to r5
11010000000000000000010100000000 //Write value in r0 to address in r5 with offset 0
00001001100000000001010100000101 //Compute r5 + 1 and write result to r5
00001001100000000001001100000011 //Compute r3 + 1 and write result to r3
01100000000000000010001101000000 //If r3 == r4, then jump to offset 2
10010000000000000000101001001010 //Jump to constant address 1317
10100000000000000000000000000101 //Pop from stack to r5
10100000000000000000000000000100 //Pop from stack to r4
10100000000000000000000000000011 //Pop from stack to r3
10100000000000000000000000000010 //Pop from stack to r2
10100000000000000000000000000001 //Pop from stack to r1
10100000000000000000000000001111 //Pop from stack to r15
10000000000000000011000011110000 //Jump to reg r15 with offset 3
10110000000000000000000000010000 //Push r1 to stack
10110000000000000000000000100000 //Push r2 to stack
10110000000000000000000000110000 //Push r3 to stack
10110000000000000000000001000000 //Push r4 to stack
10110000000000000000000001010000 //Push r5 to stack
01110010011000110010000000000001 //Set r1 to 0x2632
01110000000011000000000100000001 //Set highest 16 bits of r1 to 0xC0
01110000000000000000000000000011 //Set r3 to 0
01110000000001000000000000000100 //Set r4 to 64
00000000000000000000000100000101 //Compute r1 OR r0 and write result to r5
11010000000000000000010100000000 //Write value in r0 to address in r5 with offset 0
11010000000000000001010100000000 //Write value in r0 to address in r5 with offset 1
11010000000000000010010100000000 //Write value in r0 to address in r5 with offset 2
11010000000000000011010100000000 //Write value in r0 to address in r5 with offset 3
00001001100000000100010100000101 //Compute r5 + 4 and write result to r5
00001001100000000001001100000011 //Compute r3 + 1 and write result to r3
01100000000000000010001101000000 //If r3 == r4, then jump to offset 2
10010000000000000000101001110110 //Jump to constant address 1339
10100000000000000000000000000101 //Pop from stack to r5
10100000000000000000000000000100 //Pop from stack to r4
10100000000000000000000000000011 //Pop from stack to r3
10100000000000000000000000000010 //Pop from stack to r2
10100000000000000000000000000001 //Pop from stack to r1
10100000000000000000000000001111 //Pop from stack to r15
10000000000000000011000011110000 //Jump to reg r15 with offset 3
10110000000000000000000000100000 //Push r2 to stack
10110000000000000000000000110000 //Push r3 to stack
10110000000000000000000001000000 //Push r4 to stack
00001000100000001111000100000010 //Compute r1 AND 0b00001111 and write result to r2
00001000100011110000000100000011 //Compute r1 AND 0b11110000 and write result to r3
00001011000000000100001100000011 //Compute r3 >> 4 and write result to r3
01110000010101100000000000000100 //Set r4 to 1376
01110000000000000000000100000100 //Set highest 16 bits of r4 to 0
00000001100000000000001001000010 //Compute r2 + r4 and write result to r2
00000001100000000000001101000011 //Compute r3 + r4 and write result to r3
01110000000000000000000000000001 //Set r1 to 0
01110011000001111000000100000001 //Set highest 16 bits of r1 to 0x3078
11100000000000000000001000000010 //Read at address in r2 with offset 0 to r2
11100000000000000000001100000011 //Read at address in r3 with offset 0 to r3
00001010100000001000001100000011 //Compute r3 << 8 and write result to r3
00000001100000000000001000010001 //Compute r2 + r1 and write result to r1
00000001100000000000001100010001 //Compute r3 + r1 and write result to r1
10100000000000000000000000000100 //Pop from stack to r4
10100000000000000000000000000011 //Pop from stack to r3
10100000000000000000000000000010 //Pop from stack to r2
10100000000000000000000000001111 //Pop from stack to r15
10000000000000000011000011110000 //Jump to reg r15 with offset 3
00000000000000000000000000110000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110011 //data
00000000000000000000000000110100 //data
00000000000000000000000000110101 //data
00000000000000000000000000110110 //data
00000000000000000000000000110111 //data
00000000000000000000000000111000 //data
00000000000000000000000000111001 //data
00000000000000000000000001000001 //data
00000000000000000000000001000010 //data
00000000000000000000000001000011 //data
00000000000000000000000001000100 //data
00000000000000000000000001000101 //data
00000000000000000000000001000110 //data
10110000000000000000000000010000 //Push r1 to stack
10110000000000000000000000100000 //Push r2 to stack
10110000000000000000000000110000 //Push r3 to stack
10110000000000000000000001010000 //Push r5 to stack
10110000000000000000000010000000 //Push r8 to stack
10110000000000000000000010010000 //Push r9 to stack
01110010011000101110000000000011 //Set r3 to 0x262E
01110000000011000000000100000011 //Set highest 16 bits of r3 to 0xC0
01110000000000000000000000000101 //Set r5 to 0
01110000000000100000000000001000 //Set r8 to 32
00001010000000001000100000001000 //Compute r8 - 8 and write result to r8
11100000000000000000000100001001 //Read at address in r1 with offset 0 to r9
00000011000000000000100110001001 //Compute r9 >> r8 and write result to r9
11010000000000000000001110010000 //Write value in r9 to address in r3 with offset 0
01010000000000000011000010000000 //If r0 != r8, then jump to offset 3
00001001100000000001000100000001 //Compute r1 + 1 and write result to r1
01110000000000100000000000001000 //Set r8 to 32
00001001100000000001010100000101 //Compute r5 + 1 and write result to r5
00110000000000000010010100100000 //If r5 >= r2, then jump to offset 2
10010000000000000000101011110100 //Jump to constant address 1402
01110000000000001010000000000010 //Set r2 to 0xA
11010000000000000000001100100000 //Write value in r2 to address in r3 with offset 0
10100000000000000000000000001001 //Pop from stack to r9
10100000000000000000000000001000 //Pop from stack to r8
10100000000000000000000000000101 //Pop from stack to r5
10100000000000000000000000000011 //Pop from stack to r3
10100000000000000000000000000010 //Pop from stack to r2
10100000000000000000000000000001 //Pop from stack to r1
10100000000000000000000000001111 //Pop from stack to r15
10000000000000000011000011110000 //Jump to reg r15 with offset 3
10110000000000000000000000010000 //Push r1 to stack
10110000000000000000000000100000 //Push r2 to stack
10110000000000000000000000110000 //Push r3 to stack
01110010011000101110000000000011 //Set r3 to 0x262E
01110000000011000000000100000011 //Set highest 16 bits of r3 to 0xC0
00001011000000011000000100000010 //Compute r1 >> 24 and write result to r2
11010000000000000000001100100000 //Write value in r2 to address in r3 with offset 0
00001011000000010000000100000010 //Compute r1 >> 16 and write result to r2
11010000000000000000001100100000 //Write value in r2 to address in r3 with offset 0
00001011000000001000000100000010 //Compute r1 >> 8 and write result to r2
11010000000000000000001100100000 //Write value in r2 to address in r3 with offset 0
11010000000000000000001100010000 //Write value in r1 to address in r3 with offset 0
01110000000000001010000000000010 //Set r2 to 0xA
11010000000000000000001100100000 //Write value in r2 to address in r3 with offset 0
10100000000000000000000000000011 //Pop from stack to r3
10100000000000000000000000000010 //Pop from stack to r2
10100000000000000000000000000001 //Pop from stack to r1
10100000000000000000000000001111 //Pop from stack to r15
10000000000000000011000011110000 //Jump to reg r15 with offset 3
00100000000000000000000000001111 //Save PC to r15
10110000000000000000000011110000 //Push r15 to stack
10010000000000000000100100110000 //Jump to constant address 1176
01110000010111111001000000000001 //Set r1 to 1529
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00100000000000000000000000001111 //Save PC to r15
10110000000000000000000011110000 //Push r15 to stack
10010000000000000000100101010010 //Jump to constant address 1193
01110000010111011001000000000001 //Set r1 to 1497
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00100000000000000000000000001111 //Save PC to r15
10110000000000000000000011110000 //Push r15 to stack
10010000000000000000100110000010 //Jump to constant address 1217
01110000000000000110000000000001 //Set r1 to 6
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00100000000000000000000000001111 //Save PC to r15
10110000000000000000000011110000 //Push r15 to stack
10010000000000000000101101101000 //Jump to constant address 1460
11111111111111111111111111111111 //Halt
01110000000000011010000000001000 //Set r8 to 26
01110000000000000000000000001001 //Set r9 to 0
01110000010000100000000000000010 //Set r2 to 0x0420
01110000000011000000000100000010 //Set highest 16 bits of r2 to 0xC0
00001001100100000000001000000010 //Compute r2 + 256 and write result to r2
01110000000000000000000000000011 //Set r3 to 0
01110000000000101000000000000100 //Set r4 to 40
00000000000000000000001000000101 //Compute r2 OR r0 and write result to r5
00000000000000000000000100000110 //Compute r1 OR r0 and write result to r6
01110000000000000001000000000111 //Set r7 to 1
11000000000000000000011001010000 //Copy from address in r6 to address in r5 with offset 0
11010000100000000000010101110000 //Write value in r7 to address in r5 with offset 2048
00001001100000000001010100000101 //Compute r5 + 1 and write result to r5
00001001100000000001011000000110 //Compute r6 + 1 and write result to r6
00001001100000000001001100000011 //Compute r3 + 1 and write result to r3
01100000000000000010001101000000 //If r3 == r4, then jump to offset 2
10010000000000000000101101111100 //Jump to constant address 1470
00001001100000101000000100000001 //Compute r1 + 40 and write result to r1
00001001100001000000001000000010 //Compute r2 + 64 and write result to r2
00001001100000000001100100001001 //Compute r9 + 1 and write result to r9
01100000000000000010100010010000 //If r8 == r9, then jump to offset 2
10010000000000000000101101110010 //Jump to constant address 1465
10100000000000000000000000001111 //Pop from stack to r15
10000000000000000011000011110000 //Jump to reg r15 with offset 3
01000111011100100110000101110000 //data
01101000011010010110001101110011 //data
00100000011100000111001001101001 //data
01101110011101000110100101101110 //data
01100111001000000111010001100101 //data
01110011011101000010000000111010 //data
01001111000000000000000000000000 //data
10110000101100001011000110110001 //data
10110010101100100000000000000000 //data
00010000000000000000000000000000 //Return from interrupt
00010000000000000000000000000000 //Return from interrupt
00010000000000000000000000000000 //Return from interrupt
00010000000000000000000000000000 //Return from interrupt
00000000000000000000000011111111 //data
01000000011001010110010001111000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00111010101010111110010101010110 //data
11010101010101011001010101000000 //data
10010000000000001001000000000000 //data
10010000000000001001000000000000 //data
11101010101010101001010101010101 //data
10010101010101010100000101000100 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
11101010101011001001010101011011 //data
10010101010101110000000000010110 //data
00000000000001100000000000000110 //data
00000000000001100000000000000110 //data
00111010101011001110010101011011 //data
11010101010101111001010000010110 //data
10010000000001101001000000000110 //data
10010000000001101001000000000110 //data
00000000000000000001010000000000 //data
00010100000000000000000000000100 //data
00000000000001000000000000000000 //data
00000001000000000000000000000000 //data
00111000001110000011100000111000 //data
11111110111111101111111011111110 //data
00010100000101010001010000010101 //data
00010100000101000001010000010100 //data
00000000000000000000000000000000 //data
00000000000000000011000000000001 //data
11111010101001000011000000000001 //data
00000000000000000000000000000000 //data
00000000000000010000000000001001 //data
00000000000010100000000000000000 //data
00000000000000000000000000001010 //data
00000000000010010000000000000001 //data
11100000000000001001010000000000 //data
10010100000000001001010000000000 //data
11100000000000001001000000000000 //data
10010000000000001001000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000010110000000000010110 //data
00000000000101100000000000010110 //data
00000000000010110000000000000110 //data
00000000000001100000000000000110 //data
11100000000010111001010000010110 //data
10010100000101101001000000010110 //data
11100000000010111001000000000110 //data
10010000000001101001000000000110 //data
00111010101011001110010101011011 //data
11010101010101111001000000000110 //data
10010000000001101001000000000110 //data
10010101010101101110101010101011 //data
00010100000101000001010000010100 //data
00010100000101000001010000010100 //data
00010100000101000001010000010100 //data
00010100000101000001010000010100 //data
00000000000000000000000000000011 //data
00001100000000100000001111000010 //data
00000010111100100000000010111101 //data
00000000001001011111111111010110 //data
11000000000000001100000000000000 //data
11000000001100001100001011000000 //data
11001011110000000110111100000000 //data
01011100000000001001011010101100 //data
11100000000000001001010000000000 //data
10010100000000001001010000000000 //data
10010000000000001001000000010000 //data
10110101010101011110101010101011 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000010100000000 //data
10010101010101011110101010101011 //data
00000000000010110000000000010110 //data
00000000000101100000000000010110 //data
00000000000001100000010000000110 //data
01010101010111101110101010101011 //data
11100000000010111001010000010110 //data
10010000000001101001010000000110 //data
10010000000001101001000000000110 //data
10110101010111101110101010101011 //data
00000000100000000000001000000000 //data
00000010100000000000001000000000 //data
00000010100000000000100001100000 //data
00001000011000000000001010000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000100001001000001 //data
00111010100101100000000000110101 //data
00000000111110010000001111100011 //data
00000011100000110000110000000011 //data
00000000000000110000000000000011 //data
10010111111111110101100000000000 //data
01111110000000001000111110000000 //data
10000011110000001000000000110000 //data
11000000000000000000000000000000 //data
00111010101010111110010101010101 //data
11010101010001011001010000000000 //data
10010000000000001001000000000000 //data
10110101010101011110101010101011 //data
11101010101010101001010101010110 //data
10010100000101010000000000000000 //data
00000000000000000100000000000000 //data
10010101010101011110101010101011 //data
11101010101011001001010101011011 //data
10010101000101110000000000010110 //data
00000000000001100000000000010110 //data
01101001010111101110101010101011 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000010000000000000101 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
01010000000000001001000000000000 //data
00011111111101000011111010111100 //data
00111010101011000010100101101000 //data
00101001011010000011101010101100 //data
00111110101111000011111010111100 //data
00111010101011000010100101101000 //data
00100101010110000001010101010100 //data
00010101010101000001011111010100 //data
00011101011101000001110101110100 //data
00000000000000000000000000000000 //data
00000000000000000011000000110000 //data
00110000001100001111100011111000 //data
11111000111110001110010011100100 //data
00111010101010111110000101010101 //data
11000101010001011001010000000000 //data
10000000000000000001000000000000 //data
00000000000000000000000000000000 //data
11100010101010101001000101010110 //data
10010100000101010000000000000000 //data
00000000000000000100000000000000 //data
00000000000000000000000000000000 //data
11101010101011001000010101011011 //data
10010101000101110000000000010110 //data
00000000000001100000000000000010 //data
00000000000000000000000000000000 //data
00000000000101100000000000000101 //data
00000000000000010000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
11010000000000001001000000000000 //data
01000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00111110101111000011111010111100 //data
00111010101011000010100101101000 //data
00101001011010000011101010101100 //data
00111110101111000001111010110100 //data
00011111111101000001111111110100 //data
00011111111101000001010101010100 //data
00010101010101000010010101011000 //data
00101001011010000011100101101100 //data
00111001001110010011111000111110 //data
00111110001111100000110000001100 //data
00001100000011000000000000000000 //data
00000000000000000000000000000000 //data
00111010101010101010010101010101 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
11101010101010101001010101010110 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
11101010101011001001010101010110 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00111010101011001010010101010110 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
